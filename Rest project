<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="50c18a94-8b88-4dec-a550-b022085bb6f0" activeEnvironment="Default" name="REST Project with API tests" resourceRoot="" soapui-version="5.7.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:description>These project contains some simple test for this API https://gorest.co.in/.
Here are some basic tests with some script. I did it just to learn in practice SoapUI. 
It for sure has some not the best solutions, but I am learning by my self.</con:description><con:settings/><con:interface xsi:type="con:RestService" id="c118f441-1d6f-4327-aec8-0b801f40ab28" wadlVersion="http://wadl.dev.java.net/2009/02" name="https://gorest.co.in" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://gorest.co.in</con:endpoint></con:endpoints><con:resource name="Posts" path="/public/v2/posts" id="27d5ac7d-1752-4ebd-b241-80a9c8a7d224"><con:settings/><con:parameters/><con:method name="Posts 1" id="44eba708-3fa5-476e-8eaf-daebcf0b1429" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="bafe0d2e-c94c-4bc2-9483-7ce04736b3a0" mediaType="application/json"><con:settings/><con:endpoint>https://gorest.co.in</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="4933c1ca-baeb-4c08-995e-8bde829d13e3" wadlVersion="http://wadl.dev.java.net/2009/02" name="https://gorest.co.in" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://gorest.co.in</con:endpoint></con:endpoints><con:resource name="Comments" path="/public/v2/comments" id="fc0b70a4-6819-4796-845a-9955753ef486"><con:settings/><con:parameters/><con:method name="Comments 1" id="1af08e60-1412-490b-b1d0-bedfe1f30240" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:request name="Request 1" id="2ac69304-6750-4f04-bc18-096b479663a6" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request/><con:originalUri>https://gorest.co.in/public/v2/comments</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="0adc54c8-d80c-46b9-8ca0-e70741b4ebfc" wadlVersion="http://wadl.dev.java.net/2009/02" name="https://gorest.co.in" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://gorest.co.in</con:endpoint></con:endpoints><con:resource name="Todos" path="/public/v2/todos" id="54bf3cbb-2900-43a4-bde4-c3c96af0c56a"><con:settings/><con:parameters/><con:method name="Todos 1" id="88c1e390-9d6a-439c-8071-051b1895e8ff" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:request name="Request 1" id="f44e3ce5-f0d1-4e45-bc5c-a235c573601d" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request/><con:originalUri>https://gorest.co.in/public/v2/todos</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="a34e8807-f9fc-4a9b-b585-50c5a5bcf3be" wadlVersion="http://wadl.dev.java.net/2009/02" name="https://gorest.co.in" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://gorest.co.in</con:endpoint></con:endpoints><con:resource name="Users" path="/public/v2/users" id="9f15552b-6431-429e-807f-1199e3cffe9a"><con:settings/><con:parameters/><con:method name="Users 1" id="4e44d5ea-a563-484e-993e-68b6c2db83f7" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="5faf04a7-89f1-4088-b182-f3ea53617432" mediaType="application/json"><con:settings/><con:endpoint>https://gorest.co.in</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="9fcf7101-d030-42e5-bbf8-c48160c932aa" wadlVersion="http://wadl.dev.java.net/2009/02" name="https://gorest.co.in" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://gorest.co.in</con:endpoint></con:endpoints><con:resource name="Specific user" path="/public/v2/users/{userId}" id="9aceb04e-47ba-4fd0-a1f0-e14a21dd8be4"><con:settings/><con:parameters><con:parameter><con:name>userId</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Untitled 1" id="33073197-457e-4377-9be7-9028d2352dfa" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:user="https://gorest.co.in/public/v2/users/">user:Fault</con:element></con:representation><con:request name="Request 1" id="e6a08249-4207-47a1-aba3-2b88aa1d8de1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request/><con:originalUri>https://gorest.co.in/public/v2/users/</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="28" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>userId</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="9e9c5299-c5b2-4a85-a9c2-8da4c169c9b2" wadlVersion="http://wadl.dev.java.net/2009/02" name="https://gorest.co.in" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://gorest.co.in</con:endpoint></con:endpoints><con:resource name="Post user" path="/public/v2/users" id="de616023-f4b4-4c3d-8b3c-c5ec02a5c224"><con:settings/><con:parameters/><con:method name="Create user" id="96bb4fe8-cb92-4d21-87f8-1c93075afc62" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200 201</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>401 422</con:status><con:params/><con:element xmlns:user="https://gorest.co.in/public/v2/users">user:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>406</con:status><con:params/></con:representation><con:request name="Request 1" id="6446a9e0-f49e-443a-a9ce-aff71d1a6412" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer 017cdbf941523b2d82a487f36a22846fb6ab9c693643eafcc6294b4d66050d05" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request/><con:originalUri>https://gorest.co.in/public/v2/users</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="493d28ca-166d-457c-9a11-871c063615aa" wadlVersion="http://wadl.dev.java.net/2009/02" name="https://gorest.co.in" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://gorest.co.in</con:endpoint></con:endpoints><con:resource name="Update  users" path="/public/v2/users/{userId}" id="a8c969f2-4364-42c1-b0f0-3151d72930d7"><con:settings/><con:parameters><con:parameter><con:name>userId</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="28 1" id="c0a6ba78-eae4-416f-9512-79fbb02b4ff0" method="PUT"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ns="https://gorest.co.in/public/v2/users/28">ns:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>401 422</con:status><con:params/><con:element xmlns:ns="https://gorest.co.in/public/v2/users/28">ns:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="1a00f9db-0fb3-4700-abd0-24f4f3b511f2" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer 017cdbf941523b2d82a487f36a22846fb6ab9c693643eafcc6294b4d66050d05" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request/><con:originalUri>https://gorest.co.in/public/v2/users/28</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="userId" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>userId</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="e8b268df-fc66-4cea-97c5-0386f074726e" wadlVersion="http://wadl.dev.java.net/2009/02" name="https://gorest.co.in" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://gorest.co.in</con:endpoint></con:endpoints><con:resource name="Delete user" path="/public/v2/users/{userId}" id="05a8aac4-ea75-48c0-b71e-f483f4e46c5b"><con:settings/><con:parameters><con:parameter><con:name>userId</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Delete" id="6b8c83a4-9234-4deb-8c58-0f7c3395ff18" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:ns="https://gorest.co.in/public/v2/users/28">ns:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="4e318d90-f47c-44d5-8ec4-739a45388e80" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request/><con:originalUri>https://gorest.co.in/public/v2/users/28</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>userId</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="767413cd-f8aa-41d5-963e-1513d72a72fc" wadlVersion="http://wadl.dev.java.net/2009/02" name="https://gorest.co.in" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://gorest.co.in</con:endpoint></con:endpoints><con:resource name="Get user posts" path="/public/v2/users/{userId}/posts" id="95c0bc11-2d31-400f-87af-52bb493a9ce1"><con:settings/><con:parameters><con:parameter><con:name>userId</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="28" id="480d221a-30d7-4d42-bfa0-fade0e371e34" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:pos="https://gorest.co.in/public/v2/users/28/posts">pos:Fault</con:element></con:representation><con:request name="Request 1" id="86ecbf27-ccad-4492-b0df-73c1d1730ac4" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Autorization" value="${#Project#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request/><con:originalUri>https://gorest.co.in/public/v2/users/28/posts</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#Testcase#postId}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>userId</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="84c34fe6-3a6b-4e00-b427-24bcccb6ce6b" wadlVersion="http://wadl.dev.java.net/2009/02" name="https://gorest.co.in" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://gorest.co.in</con:endpoint></con:endpoints><con:resource name="Create post" path="/public/v2/users/{userId}/posts" id="9e830834-c115-4b81-a33b-eb24328295df"><con:settings/><con:parameters><con:parameter><con:name>userId</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Posts 1" id="e3ad9d75-e1ea-4f40-9746-cdaecae012c4" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>401 422</con:status><con:params/><con:element xmlns:pos="https://gorest.co.in/public/v2/users/28/posts">pos:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:pos="https://gorest.co.in/public/v2/users/28/posts">pos:Response</con:element></con:representation><con:request name="Request 1" id="87804852-7791-49df-8e12-3b6fe78a04bc" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer 017cdbf941523b2d82a487f36a22846fb6ab9c693643eafcc6294b4d66050d05" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request/><con:originalUri>https://gorest.co.in/public/v2/users/28/posts</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#userId}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>userId</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="6fc7dc96-1f66-4d6e-8bf4-607235021814" wadlVersion="http://wadl.dev.java.net/2009/02" name="https://gorest.co.in" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://gorest.co.in</con:endpoint></con:endpoints><con:resource name="Comments" path="/public/v2/posts/{userId}/comments" id="38487f41-b9fc-43b1-b7b5-fabac24a7728"><con:settings/><con:parameters><con:parameter><con:name>userId</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Get user comments" id="6a684c57-2006-4df6-918a-13adbc0115c7" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:com="https://gorest.co.in/public/v2/posts/28/comments">com:Fault</con:element></con:representation><con:request name="Request 1" id="bbaf0230-e005-475d-a61b-14ef2fd8aa0b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Autohrization" value="${#Project#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request/><con:originalUri>https://gorest.co.in/public/v2/posts/28/comments</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#userId}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>userId</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="d372fd19-2338-4f6e-9671-1a6181fc9ffb" wadlVersion="http://wadl.dev.java.net/2009/02" name="https://gorest.co.in" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://gorest.co.in</con:endpoint></con:endpoints><con:resource name="Post a comment" path="/public/v2/posts/{userId}/comments" id="36ebdfb6-c238-4d23-a8b9-c4e371540875"><con:settings/><con:parameters><con:parameter><con:name>userId</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Comments 1" id="18024eb7-166a-4e51-8f20-2c5ed8fea4e6" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>401 422</con:status><con:params/><con:element xmlns:com="https://gorest.co.in/public/v2/posts/28/comments">com:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:com="https://gorest.co.in/public/v2/posts/28/comments">com:Response</con:element></con:representation><con:request name="Request 1" id="9e521662-4f55-4eec-bdee-bfc89dd7ad47" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request/><con:originalUri>https://gorest.co.in/public/v2/posts/28/comments</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#userId}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>userId</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="56c43155-c568-408b-ad89-2bd09ff0ced7" wadlVersion="http://wadl.dev.java.net/2009/02" name="https://gorest.co.in" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://gorest.co.in</con:endpoint></con:endpoints><con:resource name="Todos" path="/public/v2/users/{userId}/todos" id="0e5b8ecb-e606-44c7-8bb2-2fd4e3a0b83f"><con:settings/><con:parameters><con:parameter><con:name>userId</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Todos 1" id="ce6b5a68-3a86-40e4-9c6f-cea72505a5c3" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:tod="https://gorest.co.in/public/v2/users/28/todos">tod:Fault</con:element></con:representation><con:request name="Get user todos" id="b5aec46a-a08a-47b1-8965-a5429de002ff" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Autohorization" value="${#Project#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request/><con:originalUri>https://gorest.co.in/public/v2/users/28/todos</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${TestSuite#userId}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>userId</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="85b3a0a1-83f8-4975-b539-283bd5a0b5b6" wadlVersion="http://wadl.dev.java.net/2009/02" name="https://gorest.co.in" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://gorest.co.in</con:endpoint></con:endpoints><con:resource name="Todos" path="/public/v2/users/{userId}/todos" id="e2aa2a29-e3a1-4b1d-b4b5-d311792887c8"><con:settings/><con:parameters><con:parameter><con:name>userId</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Post todo" id="6b60a519-d0c5-4f07-84c4-18dd271a52f5" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>401 422</con:status><con:params/><con:element xmlns:tod="https://gorest.co.in/public/v2/users/28/todos">tod:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:tod="https://gorest.co.in/public/v2/users/28/todos">tod:Response</con:element></con:representation><con:request name="Request 1" id="f27d07a5-75f4-42ab-8b20-3e95a73b7ec7" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request/><con:originalUri>https://gorest.co.in/public/v2/users/28/todos</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#userId}=5" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>userId</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:testSuite id="84e6022a-f150-4805-b930-2b31e6d38fec" name="Validate basic get responses"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="6ae72001-04ea-40c8-b264-2b60e042d6aa" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validate basic get responses" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Posts validation" id="a84d5f18-e145-4fb6-956c-818992b35e57"><con:settings/><con:config service="https://gorest.co.in" resourcePath="/public/v2/posts" methodName="Posts 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Posts validation" id="bafe0d2e-c94c-4bc2-9483-7ce04736b3a0" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request/><con:originalUri>https://gorest.co.in/public/v2/posts</con:originalUri><con:assertion type="JsonPath Count" id="0990def1-c5b7-4707-acfc-fb5569765d63" name="Count of objects"><con:configuration><path>.id</path><content>10</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="e0426fe4-e9df-45ae-bc5a-35aa40279fb1" name="Invalid HTTP Status Codes"><con:configuration><codes>502, 404, 422
</codes></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="8fd7fb3a-43b2-4e7d-b82d-b0d0935b02c8" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="5c9ed347-af34-4e56-9241-a0df3033aa4b" name="Script Assertion"><con:configuration><scriptText>// Check of attachment in response 
assert messageExchange.responseAttachments.length == 0


</scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="0193d5b4-02dd-430b-a9ab-24d5d6b9a737" name="Existence of user_id"><con:configuration><path>.[0].user_id</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1f30daed-8adb-4572-bf63-a1906f1952be"><con:configuration/></con:assertion><con:assertion type="JsonPath Existence Match" id="dce24b4a-175a-4a3c-84d4-b769461b3c71" name="Existence of title"><con:configuration><path>.[0].title</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="c594348e-9dfe-4553-89d0-7727552a4523" name="Existence of body"><con:configuration><path>.[0].body</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Comments validation" id="4ecee46a-3926-4fd7-981b-f1c118d0af4d"><con:settings/><con:config service="https://gorest.co.in" resourcePath="/public/v2/comments" methodName="Comments 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Comments validation" id="2ac69304-6750-4f04-bc18-096b479663a6" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request/><con:originalUri>https://gorest.co.in/public/v2/comments</con:originalUri><con:assertion type="JsonPath Count" id="4ee6ca8e-e42c-42ea-82ea-1b2e68bab052" name="Count of objects"><con:configuration><path>.id</path><content>10</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="72474a81-3f6d-4649-a649-998387fa05e9" name="Existence of post_id"><con:configuration><path>$.[0].post_id</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="d87001f3-f3ed-4ce1-b67e-3c7241067dc5" name="Existence of name"><con:configuration><path>$.[0].name</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="49058e66-8d24-4341-abb1-5855956d602a" name="Existence of email"><con:configuration><path>$.[0].email</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="a4b83baa-f4f0-4853-a017-45558aea8c0f" name="Existence of body"><con:configuration><path>$.[0].body</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="0d15e758-ce26-4496-823d-61625072633f" name="Invalid HTTP Status Codes"><con:configuration><codes>502, 404, 422
</codes></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="3a4aea96-f5af-44c3-a135-d3380aedec03" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4016005e-789e-4597-b6ea-57b92af65bb5" name="Script Assertion"><con:configuration><scriptText>// Check of attachment in response 
assert messageExchange.responseAttachments.length == 0
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Todos validation" id="d54adba3-66b3-49c7-b0a7-eee7e0b09319"><con:settings/><con:config service="https://gorest.co.in" resourcePath="/public/v2/todos" methodName="Todos 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Todos validation" id="f44e3ce5-f0d1-4e45-bc5c-a235c573601d" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request/><con:originalUri>https://gorest.co.in/public/v2/todos</con:originalUri><con:assertion type="JsonPath Count" id="d1437b27-9c38-418b-85aa-d564d6f5497a" name="JsonPath Count"><con:configuration><path>.id</path><content>10</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e6791611-b709-4a12-b6d5-e2c5f318b014" name="Existence of user_id"><con:configuration><path>$.[0].user_id</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="de77ee32-c3e0-4991-970d-30d478bb4d18" name="Existence of title"><con:configuration><path>$.[0].title</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3e86dabc-52ef-48c7-a2ac-a72d0e5f5aa0" name="Existence od due_on"><con:configuration><path>$.[0].due_on</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="da374b9a-51af-4244-8f63-b6bf1db14e30" name="Existence of status"><con:configuration><path>$.[0].status</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="ca8fe2b5-5abe-4319-8054-652c2782c8b9" name="Invalid HTTP Status Codes"><con:configuration><codes>502, 404, 422
</codes></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="df23816f-c848-4f23-a541-5aa78e385e17" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="a2137746-47ee-4205-965b-4a9ec8c6741f" name="Script Assertion"><con:configuration><scriptText>// Check of attachment in response 
assert messageExchange.responseAttachments.length == 0</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Users validation" id="5867e12e-ed28-4df5-84f8-3b2961becc7c"><con:settings/><con:config service="https://gorest.co.in" resourcePath="/public/v2/users" methodName="Users 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Users validation" id="5faf04a7-89f1-4088-b182-f3ea53617432" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request/><con:originalUri>https://gorest.co.in/public/v2/users</con:originalUri><con:assertion type="JsonPath Count" id="1edbe9b4-9322-4b83-8e23-e98e9d729e0f" name="JsonPath Count"><con:configuration><path>.id</path><content>10</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="a570fb43-cb9b-47c8-80e4-0767d1335ec8" name="Existence of name"><con:configuration><path>$.[0].name</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="843c598b-0a22-4d7c-a46d-64ba0631abe3" name="Existence of email"><con:configuration><path>$.[0].email</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="97283d09-e49e-40c8-99a6-8703c59b0b28" name="Existence of gender"><con:configuration><path>$.[0].gender</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="22bf95f9-8c58-4b0f-9b7b-5da2682ca648" name="JsonPath Existence Match"><con:configuration><path>$.[0].status</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="ca8aa0eb-2782-4286-a226-0e7a9d79b6d2" name="Invalid HTTP Status Codes"><con:configuration><codes>502, 404, 422

</codes></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="54fd3ab1-185e-41f4-8944-f1b7c5cd2f91" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ac2ffde7-3d78-4eac-9390-fe113dac1784" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseAttachments.length == 0</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:setupScript/><con:properties/></con:testCase><con:properties/><con:setupScript>log.info ("Starting basic get validation tests")</con:setupScript><con:tearDownScript>log.info("Finish all basic get validation tests")</con:tearDownScript></con:testSuite><con:testSuite id="51f3c5e5-7184-4768-94d1-08237cd0c188" name="Validate user create/edit"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="ce0f34b7-7e32-4462-b129-d6c59c3af58d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Check for empty fields validation" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Blank field validation" id="cea63438-86e2-48ba-a934-1ead4cc84235"><con:settings/><con:config service="https://gorest.co.in" resourcePath="/public/v2/users" methodName="Create user" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Blank field validation" id="6446a9e0-f49e-443a-a9ce-aff71d1a6412" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value=" ${#Project#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request>{
	"name":"",
	"gender":"",
	"email":"",
	"status":""
}
</con:request><con:originalUri>https://gorest.co.in/public/v2/users</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="adb9b1a5-4d85-4ea5-8845-bb198c67b857" name="Valid HTTP Status Codes"><con:configuration><codes>422
</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="2808b706-3f4b-4755-917a-33b385ae6ff7" name="Script Assertion-Check empty fields message"><con:configuration><scriptText>import groovy.json.JsonSlurper
//get json response
def responseMessage = messageExchange.response.responseContent
def json = new JsonSlurper().parseText(responseMessage)
assert json.message[0-1] == messageExchange.modelItem.testCase.testSuite.project.getPropertyValue("emptyFieldErrorMessage")
assert json.message[2] ==   messageExchange.modelItem.testCase.testSuite.project.getPropertyValue("emptyFieldErrorMessage1")
assert json.message[3] ==  messageExchange.modelItem.testCase.testSuite.project.getPropertyValue("emptyFieldErrorMessage")
assert json.field[0] == "email"
assert json.field[1] == "name"
assert json.field[2] == "gender"
assert json.field[3] == "status"
log.info("Validated messages: " + json.message[0] +" "+"/" +" "+ json.message[2])





</scriptText></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="87cebf4a-6721-47ca-95df-d40075e0923f" name="Response SLA"><con:configuration><SLA>2000</SLA></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="2e6b046b-1882-49f0-ae62-699fb6b9147d" name="Invalid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="5e9d4140-f7cd-4d7e-a46e-3154a7acf338" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Check for invalid email validation" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Wrong email valdiation" id="35107a6d-00cd-4d31-9578-93886999d958"><con:settings/><con:config service="https://gorest.co.in" resourcePath="/public/v2/users" methodName="Create user" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Wrong email valdiation" id="6446a9e0-f49e-443a-a9ce-aff71d1a6412" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value=" ${#Project#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request>{
	"name":"",
	"gender":"",
	"email":"${#TestSuite#wrong_email}",
	"status":""
}
</con:request><con:originalUri>https://gorest.co.in/public/v2/users</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="adb9b1a5-4d85-4ea5-8845-bb198c67b857" name="Valid HTTP Status Codes"><con:configuration><codes>422
</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="2808b706-3f4b-4755-917a-33b385ae6ff7" name="Script Assertion-Check invalid email message"><con:configuration><scriptText>import groovy.json.JsonSlurper
//get json response
def responseMessage = messageExchange.response.responseContent
def json = new JsonSlurper().parseText(responseMessage)
log.info(json)
assert json.message[3] == messageExchange.modelItem.testCase.testSuite.project.getPropertyValue("invalidEmailMessage")
log.info("Validated messages: " + json.message[3])




</scriptText></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="363201dc-eaea-40ae-a4ad-b0dd47bb5a41" name="Response SLA"><con:configuration><SLA>1000</SLA></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="a7edfb69-be3d-4dfc-a523-c96656916bbf" name="Invalid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="8a54ba0c-465c-4ebf-9897-d660f665d268" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Check creating user" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Create user" id="9ff571e5-c071-4f12-b463-1757739d33cd"><con:settings/><con:config service="https://gorest.co.in" resourcePath="/public/v2/users" methodName="Create user" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create user" id="6446a9e0-f49e-443a-a9ce-aff71d1a6412" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value=" ${#Project#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request>{
	"name":"${#TestSuite#name}",
	"gender":"${#TestSuite#gender1}",
	"email":"${#TestSuite#email}",
	"status":"${#TestSuite#status}"
}
</con:request><con:originalUri>https://gorest.co.in/public/v2/users</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="adb9b1a5-4d85-4ea5-8845-bb198c67b857" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="2808b706-3f4b-4755-917a-33b385ae6ff7" name="Script Assertion-Check response data"><con:configuration><scriptText>import groovy.json.JsonSlurper
//get json response
def responseMessage = messageExchange.response.responseContent
def json = new JsonSlurper().parseText(responseMessage)
assert json.name == messageExchange.modelItem.testStep.testCase.testSuite.getPropertyValue("name")
assert json.email == messageExchange.modelItem.testStep.testCase.testSuite.getPropertyValue("email")
assert json.gender == messageExchange.modelItem.testStep.testCase.testSuite.getPropertyValue("gender1")
assert json.status == messageExchange.modelItem.testStep.testCase.testSuite.getPropertyValue("status")
log.info("Whole response:")
log.info(json)





</scriptText></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="980b8c65-508a-4cdb-8341-2d9ddcfbe7cc" name="Response SLA"><con:configuration><SLA>2000</SLA></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="5c8bd528-f096-482e-941f-2a289fabcbdd" name="Invalid HTTP Status Codes"><con:configuration><codes>422, 404, 502, 500</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Save userId in TestSuite" id="78c25443-3daa-47a1-9fad-4ffea429d4e4"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def response = testRunner.testCase.testSteps["Create user"].testRequest.response.contentAsString
def slurper = new JsonSlurper()
def result = slurper.parseText(response)
def userId = result.id.toString()
testRunner.testCase.testSuite.setPropertyValue("userId", userId)

</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="cc5fb590-ff1c-4552-9fe2-77f70f642ced" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Check for creating user with same email address" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Create user with the same email" id="40a23c68-e6d7-4e21-9036-6920e126852e"><con:settings/><con:config service="https://gorest.co.in" resourcePath="/public/v2/users" methodName="Create user" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create user with the same email" id="6446a9e0-f49e-443a-a9ce-aff71d1a6412" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value=" ${#Project#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request>{
	"name":"${#TestSuite#name}",
	"gender":"${#TestSuite#gender1}",
	"email":"${#TestSuite#email}",
	"status":"${#TestSuite#status}"
}
</con:request><con:originalUri>https://gorest.co.in/public/v2/users</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="adb9b1a5-4d85-4ea5-8845-bb198c67b857" name="Valid HTTP Status Codes"><con:configuration><codes>422</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="2808b706-3f4b-4755-917a-33b385ae6ff7" name="Script Assertion-Check same email message"><con:configuration><scriptText>import groovy.json.JsonSlurper
//get json response
def responseMessage = messageExchange.response.responseContent
def json = new JsonSlurper().parseText(responseMessage)
assert json.field[0] == "email"
assert json.message[0] == messageExchange.modelItem.testCase.testSuite.project.getPropertyValue("sameEmailMessage")
log.info("Validated messages: " + json.message[0])




</scriptText></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="980b8c65-508a-4cdb-8341-2d9ddcfbe7cc" name="Response SLA"><con:configuration><SLA>1500</SLA></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="5c8bd528-f096-482e-941f-2a289fabcbdd" name="Invalid HTTP Status Codes"><con:configuration><codes>201, 502, 500, 404</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="5f64ba58-4532-4ebb-b890-fcdb8bac03cf" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Check for empty fields validation in edit" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Edit user blank fields" id="5bb00a3d-3d2b-4073-811d-1998a99366ab"><con:settings/><con:config service="https://gorest.co.in" resourcePath="/public/v2/users/{userId}" methodName="28 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Edit user blank fields" id="1a00f9db-0fb3-4700-abd0-24f4f3b511f2" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value=" ${#Project#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request>{
	"name":"",
	"gender":"",
	"email":"",
	"status":""
}</con:request><con:originalUri>https://gorest.co.in/public/v2/users/28</con:originalUri><con:assertion type="Response SLA Assertion" id="8e85e796-8432-42df-a46b-e0fa971fa4cf" name="Response SLA"><con:configuration><SLA>2000</SLA></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="5002a932-1bda-471b-882f-023b68dd6633" name="Valid HTTP Status Codes"><con:configuration><codes>422

</codes></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="00c994a5-1192-4f1a-b35e-f68777d5c420" name="Invalid HTTP Status Codes"><con:configuration><codes>200, 502, 404</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="437571db-04d3-4259-864e-2abfe2d898d9" name="Script Assertion"><con:configuration><scriptText>import groovy.json.JsonSlurper
//get json response
def responseMessage = messageExchange.response.responseContent
def json = new JsonSlurper().parseText(responseMessage)
assert json.message[0-1] == messageExchange.modelItem.testCase.testSuite.project.getPropertyValue("emptyFieldErrorMessage")
assert json.message[2] ==   messageExchange.modelItem.testCase.testSuite.project.getPropertyValue("emptyFieldErrorMessage1")
assert json.message[3] ==  messageExchange.modelItem.testCase.testSuite.project.getPropertyValue("emptyFieldErrorMessage")
assert json.field[0] == "email"
assert json.field[1] == "name"
assert json.field[2] == "gender"
assert json.field[3] == "status"
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#userId}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>userId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="59a99b1a-b305-42ae-82fe-3bbcb3d649b9" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Check for invalid emial validation in edit" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Wrong email" id="21794aaa-7ad1-4b4a-9098-7a6fedd5d8ef"><con:settings/><con:config service="https://gorest.co.in" resourcePath="/public/v2/users/{userId}" methodName="28 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Wrong email" id="1a00f9db-0fb3-4700-abd0-24f4f3b511f2" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request>{
	"name":"",
	"gender":"",
	"email":"${#TestSuite#wrong_email}",
	"status":""
}</con:request><con:originalUri>https://gorest.co.in/public/v2/users/28</con:originalUri><con:assertion type="Response SLA Assertion" id="8e85e796-8432-42df-a46b-e0fa971fa4cf" name="Response SLA"><con:configuration><SLA>3000</SLA></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="5002a932-1bda-471b-882f-023b68dd6633" name="Valid HTTP Status Codes"><con:configuration><codes>422

</codes></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="00c994a5-1192-4f1a-b35e-f68777d5c420" name="Invalid HTTP Status Codes"><con:configuration><codes>200, 502, 404</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="437571db-04d3-4259-864e-2abfe2d898d9" name="Script Assertion"><con:configuration><scriptText>import groovy.json.JsonSlurper
//get json response
def responseMessage = messageExchange.response.responseContent
def json = new JsonSlurper().parseText(responseMessage)
assert json.message[3] == messageExchange.modelItem.testCase.testSuite.project.getPropertyValue("invalidEmailMessage")




</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#userId}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>userId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="a868cf36-ebbd-4596-8a96-89a7a07c7ad6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Check editing user" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Edit user" id="1e8165e2-d515-45d2-8dd5-e5e3a1fbc54c"><con:settings/><con:config service="https://gorest.co.in" resourcePath="/public/v2/users/{userId}" methodName="28 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Edit user" id="1a00f9db-0fb3-4700-abd0-24f4f3b511f2" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer 017cdbf941523b2d82a487f36a22846fb6ab9c693643eafcc6294b4d66050d05" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request>{
	"name":"${#TestCase#name}",
	"gender":"${#TestCase#gender}",
	"email":"${#TestCase#email}",
	"status":"${#TestCase#status}"
}</con:request><con:originalUri>https://gorest.co.in/public/v2/users/28</con:originalUri><con:assertion type="Response SLA Assertion" id="8e85e796-8432-42df-a46b-e0fa971fa4cf" name="Response SLA"><con:configuration><SLA>3000</SLA></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="5002a932-1bda-471b-882f-023b68dd6633" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="00c994a5-1192-4f1a-b35e-f68777d5c420" name="Invalid HTTP Status Codes"><con:configuration><codes>422, 404, 501, 502</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="437571db-04d3-4259-864e-2abfe2d898d9" name="Script Assertion-Check response with edited data"><con:configuration><scriptText>import groovy.json.JsonSlurper
//get json response
def responseMessage = messageExchange.response.responseContent
def json = new JsonSlurper().parseText(responseMessage)
assert json.name ==  messageExchange.modelItem.testStep.testCase.getPropertyValue("name")
assert json.email == messageExchange.modelItem.testStep.testCase.getPropertyValue("email")
assert json.gender == messageExchange.modelItem.testStep.testCase.getPropertyValue("gender")
assert json.status == messageExchange.modelItem.testStep.testCase.getPropertyValue("status")
log.info("Whole response:")
log.info(json)</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#userId}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>userId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>name</con:name><con:value>Jane</con:value></con:property><con:property><con:name>gender</con:name><con:value>female</con:value></con:property><con:property><con:name>status</con:name><con:value>active</con:value></con:property><con:property><con:name>email</con:name><con:value>jane@teser.com</con:value></con:property></con:properties></con:testCase><con:testCase id="b9299382-b9ce-4beb-ab1d-147e0dec4b35" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Check for deleting user with no id" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Delete user" id="12cd09fd-c158-4ece-8aca-e3b6dd3d5d2b"><con:settings/><con:config service="https://gorest.co.in" resourcePath="/public/v2/users/{userId}" methodName="Delete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Delete user" id="4e318d90-f47c-44d5-8ec4-739a45388e80" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value=" ${#Project#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request/><con:originalUri>https://gorest.co.in/public/v2/users/28</con:originalUri><con:assertion type="Response SLA Assertion" id="7eb3b420-1213-49ee-8b89-c67e9dbad8af" name="Response SLA"><con:configuration><SLA>1000</SLA></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="9720681d-c4e8-4fca-bfc8-f54da4ae5933" name="Invalid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="167a0abd-5c5d-4f4f-9246-f5aeba6699c2" name="Valid HTTP Status Codes"><con:configuration><codes>404</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="41" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>userId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="298fef7d-d36e-4594-a86c-3f4d90af4573" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Check for deleting user" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Delete user" id="1be059c6-dac9-4919-9fb1-4ed864fee30a"><con:settings/><con:config service="https://gorest.co.in" resourcePath="/public/v2/users/{userId}" methodName="Delete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Delete user" id="4e318d90-f47c-44d5-8ec4-739a45388e80" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value=" ${#Project#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request/><con:originalUri>https://gorest.co.in/public/v2/users/28</con:originalUri><con:assertion type="Response SLA Assertion" id="7eb3b420-1213-49ee-8b89-c67e9dbad8af" name="Response SLA"><con:configuration><SLA>2000</SLA></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="9720681d-c4e8-4fca-bfc8-f54da4ae5933" name="Invalid HTTP Status Codes"><con:configuration><codes>404, 400, 500, 502
</codes></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="167a0abd-5c5d-4f4f-9246-f5aeba6699c2" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#userId}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>userId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="afabd2ef-c124-47aa-957a-72c6a8f9774f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Checking if user doesn't exist" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Unexisting userId" id="c76b1075-1848-4edf-bcd8-2ffd290e2422"><con:settings/><con:config service="https://gorest.co.in" resourcePath="/public/v2/users/{userId}" methodName="Untitled 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Unexisting userId" id="e6a08249-4207-47a1-aba3-2b88aa1d8de1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request/><con:originalUri>https://gorest.co.in/public/v2/users/</con:originalUri><con:assertion type="Response SLA Assertion" id="9e720099-0284-44a5-881b-715b11f3407b" name="Response SLA"><con:configuration><SLA>2000</SLA></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="e4ae9aff-92d9-44ae-ae73-38e7688ccf27" name="Invalid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="2e33a78d-4258-4499-9e76-6a34f083b71e" name="Valid HTTP Status Codes"><con:configuration><codes>404</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="9e824db2-20e9-402c-a52f-ff0dc9b78f8a" name="Contains"><con:configuration><token>Resource not found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#userId}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>userId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties><con:property><con:name>wrong_email</con:name><con:value>wrong</con:value></con:property><con:property><con:name>name</con:name><con:value>Stanley</con:value></con:property><con:property><con:name>gender1</con:name><con:value>male</con:value></con:property><con:property><con:name>gender2</con:name><con:value>female</con:value></con:property><con:property><con:name>status</con:name><con:value>active</con:value></con:property><con:property><con:name>email</con:name><con:value>test@tester.com</con:value></con:property><con:property><con:name>userId</con:name><con:value> </con:value></con:property></con:properties><con:setupScript>log.info ("Starting create/edit user tests")</con:setupScript><con:tearDownScript>testSuite.setPropertyValue( "userId", " " )
log.info("Create/edit users tests finished")
</con:tearDownScript></con:testSuite><con:testSuite id="8618d63a-2ced-4a5c-b055-7b694a284c46" name="Validate posts endpoints"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="dd59b320-7777-414c-9978-93165eeb5756" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Check posts for not existing user" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Check for user posts" id="270bf3e2-65c1-4c61-80f0-e8f28461b894"><con:settings/><con:config service="https://gorest.co.in" resourcePath="/public/v2/users/{userId}/posts" methodName="28" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Check for user posts" id="86ecbf27-ccad-4492-b0df-73c1d1730ac4" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${@Project@token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request/><con:originalUri>https://gorest.co.in/public/v2/users/28/posts</con:originalUri><con:assertion type="Response SLA Assertion" id="444b4813-5059-4e4a-9a64-5bac0ebb9c6e" name="Response SLA"><con:configuration><SLA>1500</SLA></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="5d267344-dbce-446d-8d0a-2f56242bd4bb" name="Invalid HTTP Status Codes"><con:configuration><codes>404, 502
</codes></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="55ca0006-3865-4b2d-9465-477a097c23ff" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="10000" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>userId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="9d9668db-7afe-4be5-aa1e-33422a008c0c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Check for empty post create" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Create user" id="50b63c5f-5ff2-4875-990b-4d043969d780"><con:settings/><con:config service="https://gorest.co.in" resourcePath="/public/v2/users" methodName="Create user" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create user" id="6446a9e0-f49e-443a-a9ce-aff71d1a6412" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value=" ${#Project#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request>{
	"name":"${#TestSuite#name}",
	"gender":"${#TestSuite#gender}",
	"email":"${#TestSuite#email}",
	"status":"${#TestSuite#status}"
}
</con:request><con:originalUri>https://gorest.co.in/public/v2/users</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="adb9b1a5-4d85-4ea5-8845-bb198c67b857" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="980b8c65-508a-4cdb-8341-2d9ddcfbe7cc" name="Response SLA"><con:configuration><SLA>1000</SLA></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="5c8bd528-f096-482e-941f-2a289fabcbdd" name="Invalid HTTP Status Codes"><con:configuration><codes>422, 404, 502, 500</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Save userId in TestSuite" id="0097d56c-6f7d-4f05-b792-a1c13a348485"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def response = testRunner.testCase.testSteps["Create user"].testRequest.response.contentAsString
def slurper = new JsonSlurper()
def result = slurper.parseText(response)
def userId = result.id.toString()
testRunner.testCase.testSuite.setPropertyValue("userId", userId)

</script></con:config></con:testStep><con:testStep type="restrequest" name="Create empty post" id="3f3cf04d-085c-4e37-a7e9-f29443c72831"><con:settings/><con:config service="https://gorest.co.in" resourcePath="/public/v2/users/{userId}/posts" methodName="Posts 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create empty post" id="87804852-7791-49df-8e12-3b6fe78a04bc" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value=" ${#Project#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request/><con:originalUri>https://gorest.co.in/public/v2/users/28/posts</con:originalUri><con:assertion type="Response SLA Assertion" id="12cc494b-61cc-4128-99cc-6fe6f1696ef4" name="Response SLA"><con:configuration><SLA>2500</SLA></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="8d413188-b505-4b5f-a389-be24a4164ec4" name="Invalid HTTP Status Codes"><con:configuration><codes>201, 200</codes></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="dfdb9a9b-fefc-4e61-b810-0d8a4cbdf54c" name="Valid HTTP Status Codes"><con:configuration><codes>422</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="96783487-e2b9-4ce7-ab63-6301140c2453" name="Script Assertion-Check empty fields message"><con:configuration><scriptText>import groovy.json.JsonSlurper
//get json response
def responseMessage = messageExchange.response.responseContent
def json = new JsonSlurper().parseText(responseMessage)
assert json.message[0-1] == messageExchange.modelItem.testCase.testSuite.project.getPropertyValue("emptyFieldErrorMessage")
assert json.field[0] == "title"
assert json.field[1] == "body"
log.info("Validated message: " + json.message[0])
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#userId}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>userId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:setupScript/><con:tearDownScript>def testStep =  testRunner.testCase.testSuite.project.testSuites["Validate user create/edit"].testCases["Check for deleting user"].getTestStepByName("Delete user")
testStep.run(testRunner, context)
testCase.testSuite.setPropertyValue( "userId", " " )</con:tearDownScript><con:properties><con:property><con:name>userId</con:name><con:value> </con:value></con:property></con:properties></con:testCase><con:testCase id="71e633c2-9133-4f82-bc01-c45a540b3fa8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Creating valid post" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Create user" id="ad20c782-9650-442a-99a7-4e11fa545786"><con:settings/><con:config service="https://gorest.co.in" resourcePath="/public/v2/users" methodName="Create user" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create user" id="6446a9e0-f49e-443a-a9ce-aff71d1a6412" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value=" ${#Project#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request>{
	"name":"${#TestSuite#name}",
	"gender":"${#TestSuite#gender}",
	"email":"${#TestSuite#email}",
	"status":"${#TestSuite#status}"
}
</con:request><con:originalUri>https://gorest.co.in/public/v2/users</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="adb9b1a5-4d85-4ea5-8845-bb198c67b857" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="980b8c65-508a-4cdb-8341-2d9ddcfbe7cc" name="Response SLA"><con:configuration><SLA>1500</SLA></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="5c8bd528-f096-482e-941f-2a289fabcbdd" name="Invalid HTTP Status Codes"><con:configuration><codes>422, 404, 502, 500</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Save userId in TestSuite" id="3c8d971b-1958-4603-966e-a20d428e9301"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def response = testRunner.testCase.testSteps["Create user"].testRequest.response.contentAsString
def slurper = new JsonSlurper()
def result = slurper.parseText(response)
def userId = result.id.toString()
testRunner.testCase.testSuite.setPropertyValue("userId", userId)

</script></con:config></con:testStep><con:testStep type="restrequest" name="Create post" id="55fad81d-9564-42cc-aafb-0476a30de792"><con:settings/><con:config service="https://gorest.co.in" resourcePath="/public/v2/users/{userId}/posts" methodName="Posts 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create post" id="87804852-7791-49df-8e12-3b6fe78a04bc" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value=" ${#Project#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request>{
	"title":"${#TestSuite#postTitle}",
	"body":"${#TestSuite#postBody}"
}
</con:request><con:originalUri>https://gorest.co.in/public/v2/users/28/posts</con:originalUri><con:assertion type="Response SLA Assertion" id="12cc494b-61cc-4128-99cc-6fe6f1696ef4" name="Response SLA"><con:configuration><SLA>2500</SLA></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="8d413188-b505-4b5f-a389-be24a4164ec4" name="Invalid HTTP Status Codes"><con:configuration><codes>404, 502, 422, 500</codes></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="dfdb9a9b-fefc-4e61-b810-0d8a4cbdf54c" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="96783487-e2b9-4ce7-ab63-6301140c2453" name="Script Assertion-Check response data"><con:configuration><scriptText>import groovy.json.JsonSlurper
//get json response
def responseMessage = messageExchange.response.responseContent
def json = new JsonSlurper().parseText(responseMessage)
assert json.title == messageExchange.modelItem.testStep.testCase.testSuite.getPropertyValue("postTitle")
assert json.body == messageExchange.modelItem.testStep.testCase.testSuite.getPropertyValue("postBody")
log.info("Whole response:")
log.info(json)

</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#userId}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>userId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Save postId in TestSuite" id="be8caba5-d73a-445b-bc00-0e3c11820b62"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def response = testRunner.testCase.testSteps["Create post"].testRequest.response.contentAsString
def slurper = new JsonSlurper()
def result = slurper.parseText(response)
def postId = result.id.toString()
testRunner.testCase.testSuite.setPropertyValue("postId", postId)

</script></con:config></con:testStep><con:testStep type="restrequest" name="Check new post on posts lists" id="70473e5c-e99e-444e-9e8b-ebb6e2297e30"><con:settings/><con:config service="https://gorest.co.in" resourcePath="/public/v2/posts" methodName="Posts 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Check new post on posts lists" id="bafe0d2e-c94c-4bc2-9483-7ce04736b3a0" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request/><con:originalUri>https://gorest.co.in/public/v2/posts</con:originalUri><con:assertion type="JsonPath Count" id="0990def1-c5b7-4707-acfc-fb5569765d63" name="Count of objects"><con:configuration><path>.id</path><content>10</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="e0426fe4-e9df-45ae-bc5a-35aa40279fb1" name="Invalid HTTP Status Codes"><con:configuration><codes>500, 502, 404
</codes></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="8fd7fb3a-43b2-4e7d-b82d-b0d0935b02c8" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="5c9ed347-af34-4e56-9241-a0df3033aa4b" name="Script Assertion-Check if new post is visible on list"><con:configuration><scriptText>import groovy.json.JsonSlurper
// Check of attachment in response 
assert messageExchange.responseAttachments.length == 0
//get json response
def responseMessage = messageExchange.response.responseContent
def json = new JsonSlurper().parseText(responseMessage)
assert json.id[0].toString() == messageExchange.modelItem.testStep.testCase.testSuite.getPropertyValue("postId")



</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" id="55eb85b1-ce3d-4fb0-8399-7ee4a73e5141" name="Contains"><con:configuration><token>${#TestCase#post_id}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:tearDownScript>def testStep =  testRunner.testCase.testSuite.project.testSuites["Validate user create/edit"].testCases["Check for deleting user"].getTestStepByName("Delete user")
testStep.run(testRunner, context)
testCase.testSuite.setPropertyValue( "userId", " " )
testCase.testSuite.setPropertyValue( "postId", " " )</con:tearDownScript><con:properties/></con:testCase><con:testCase id="418e2f1d-2b12-4650-be2d-0e45683334a6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create and validate user posts" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Create user" id="46faff6d-4c0a-457c-b02c-0ec6f3bfa4d0"><con:settings/><con:config service="https://gorest.co.in" resourcePath="/public/v2/users" methodName="Create user" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create user" id="6446a9e0-f49e-443a-a9ce-aff71d1a6412" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value=" ${#Project#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request>{
	"name":"${#TestSuite#name}",
	"gender":"${#TestSuite#gender}",
	"email":"${#TestSuite#email}",
	"status":"${#TestSuite#status}"
}
</con:request><con:originalUri>https://gorest.co.in/public/v2/users</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="adb9b1a5-4d85-4ea5-8845-bb198c67b857" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="980b8c65-508a-4cdb-8341-2d9ddcfbe7cc" name="Response SLA"><con:configuration><SLA>1000</SLA></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="5c8bd528-f096-482e-941f-2a289fabcbdd" name="Invalid HTTP Status Codes"><con:configuration><codes>422, 404, 502, 500</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Save userId in TestSuite" id="359f49a0-1fb2-4957-ad11-39f352b579c7"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def response = testRunner.testCase.testSteps["Create user"].testRequest.response.contentAsString
def slurper = new JsonSlurper()
def result = slurper.parseText(response)
def userId = result.id.toString()
testRunner.testCase.testSuite.setPropertyValue("userId", userId)

</script></con:config></con:testStep><con:testStep type="restrequest" name="Create 1st post" id="da31edd2-7547-41ef-a4de-8e2fd3abc5ca"><con:settings/><con:config service="https://gorest.co.in" resourcePath="/public/v2/users/{userId}/posts" methodName="Posts 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create 1st post" id="87804852-7791-49df-8e12-3b6fe78a04bc" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value=" ${#Project#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request>{
	"title":"${#TestSuite#postTitle}",
	"body":"${#TestSuite#postBody}"
}
</con:request><con:originalUri>https://gorest.co.in/public/v2/users/28/posts</con:originalUri><con:assertion type="Response SLA Assertion" id="12cc494b-61cc-4128-99cc-6fe6f1696ef4" name="Response SLA"><con:configuration><SLA>2500</SLA></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="8d413188-b505-4b5f-a389-be24a4164ec4" name="Invalid HTTP Status Codes"><con:configuration><codes>404, 502, 422, 500</codes></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="dfdb9a9b-fefc-4e61-b810-0d8a4cbdf54c" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="96783487-e2b9-4ce7-ab63-6301140c2453" name="Script Assertion" disabled="true"><con:configuration><scriptText>import groovy.json.JsonSlurper
//get json response
def responseMessage = messageExchange.response.responseContent
def json = new JsonSlurper().parseText(responseMessage)
log.info(json)
def titleProp = messageExchange.modelItem.testStep.testCase.testSuite.getPropertyValue("postTitle")
def bodyProp = messageExchange.modelItem.testStep.testCase.testSuite.getPropertyValue("postBody")


assert json.title == titleProp
assert json.body == bodyProp

</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#userId}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>userId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Save first postId in TestSuite" id="b0ddee19-9485-40fd-b91d-d1be0955baa7"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def response = testRunner.testCase.testSteps["Create 1st post"].testRequest.response.contentAsString
def slurper = new JsonSlurper()
def result = slurper.parseText(response)
def postId = result.id.toString()
testRunner.testCase.testSuite.setPropertyValue("postId", postId)
</script></con:config></con:testStep><con:testStep type="restrequest" name="Create 2nd post" id="3291a2b8-c97f-44a6-9efa-627e9e3ba102"><con:settings/><con:config service="https://gorest.co.in" resourcePath="/public/v2/users/{userId}/posts" methodName="Posts 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create 2nd post" id="87804852-7791-49df-8e12-3b6fe78a04bc" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value=" ${#Project#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request>{
	"title":"${#TestSuite#postTitle2}",
	"body":"${#TestSuite#postBody2}"
}
</con:request><con:originalUri>https://gorest.co.in/public/v2/users/28/posts</con:originalUri><con:assertion type="Response SLA Assertion" id="12cc494b-61cc-4128-99cc-6fe6f1696ef4" name="Response SLA"><con:configuration><SLA>2500</SLA></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="8d413188-b505-4b5f-a389-be24a4164ec4" name="Invalid HTTP Status Codes"><con:configuration><codes>404, 502, 422, 500</codes></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="dfdb9a9b-fefc-4e61-b810-0d8a4cbdf54c" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="96783487-e2b9-4ce7-ab63-6301140c2453" name="Script Assertion" disabled="true"><con:configuration><scriptText>import groovy.json.JsonSlurper
//get json response
def responseMessage = messageExchange.response.responseContent
def json = new JsonSlurper().parseText(responseMessage)
log.info(json)
def titleProp = messageExchange.modelItem.testStep.testCase.testSuite.getPropertyValue("postTitle")
def bodyProp = messageExchange.modelItem.testStep.testCase.testSuite.getPropertyValue("postBody")


assert json.title == titleProp
assert json.body == bodyProp

</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#userId}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>userId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Save second postId in TestSuite" id="99065aaf-82ce-48da-8704-99288cffdfa2"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def response = testRunner.testCase.testSteps["Create 2nd post"].testRequest.response.contentAsString
def slurper = new JsonSlurper()
def result = slurper.parseText(response)
def postId = result.id.toString()
testRunner.testCase.testSuite.setPropertyValue("postId2", postId)
</script></con:config></con:testStep><con:testStep type="restrequest" name="Get users posts" id="ef807786-ec3f-4d8b-949d-24de320bf242"><con:settings/><con:config service="https://gorest.co.in" resourcePath="/public/v2/users/{userId}/posts" methodName="28" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get users posts" id="86ecbf27-ccad-4492-b0df-73c1d1730ac4" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request/><con:originalUri>https://gorest.co.in/public/v2/users/28/posts</con:originalUri><con:assertion type="Response SLA Assertion" id="55fa834b-996d-4918-a189-eb4267d7e418" name="Response SLA"><con:configuration><SLA>2000</SLA></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="da2d6392-2ca3-4180-ac7d-f357ef32b212" name="Invalid HTTP Status Codes"><con:configuration><codes>404, 500, 502, 422
</codes></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="c153f172-c45a-4c01-a1b5-91b003bf9f6e" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4b2a2a6b-af2f-4d0d-9dd6-5e54ce2c51df" name="Script Assertion"><con:configuration><scriptText>import groovy.json.JsonSlurper
def responseMessage = messageExchange.response.responseContent
def json = new JsonSlurper().parseText(responseMessage)
assert json.user_id[0-1].toString() ==  messageExchange.modelItem.testStep.testCase.testSuite.getPropertyValue("userId")
assert json.id[1].toString() == messageExchange.modelItem.testStep.testCase.testSuite.getPropertyValue("postId")
assert json.id[0].toString() == messageExchange.modelItem.testStep.testCase.testSuite.getPropertyValue("postId2")
assert json.title[1] ==  messageExchange.modelItem.testStep.testCase.testSuite.getPropertyValue("postTitle")
assert json.title[0] ==  messageExchange.modelItem.testStep.testCase.testSuite.getPropertyValue("postTitle2")</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#userId}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>userId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:tearDownScript>def testStep =  testRunner.testCase.testSuite.project.testSuites["Validate user create/edit"].testCases["Check for deleting user"].getTestStepByName("Delete user")
testStep.run(testRunner, context)
testCase.testSuite.setPropertyValue( "userId", " " )
testCase.testSuite.setPropertyValue( "postId", " " )
testCase.testSuite.setPropertyValue( "postId2", " " )</con:tearDownScript><con:properties/></con:testCase><con:properties><con:property><con:name>name</con:name><con:value>Mark</con:value></con:property><con:property><con:name>gender</con:name><con:value>male</con:value></con:property><con:property><con:name>email</con:name><con:value>mark@tester.com</con:value></con:property><con:property><con:name>status</con:name><con:value>active</con:value></con:property><con:property><con:name>userId</con:name><con:value> </con:value></con:property><con:property><con:name>postTitle</con:name><con:value>Test Post</con:value></con:property><con:property><con:name>postBody</con:name><con:value>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s.</con:value></con:property><con:property><con:name>postId</con:name><con:value> </con:value></con:property><con:property><con:name>postTitle2</con:name><con:value>Test Post 2</con:value></con:property><con:property><con:name>postBody2</con:name><con:value>Test Test Test</con:value></con:property><con:property><con:name>postId2</con:name><con:value> </con:value></con:property></con:properties><con:setupScript>log.info ("Starting create/edit user posts tests")</con:setupScript><con:tearDownScript>log.info("Create/edit users posts tests finished")</con:tearDownScript></con:testSuite><con:testSuite id="3daf2e45-e372-417b-ba0e-f8a6c0efee19" name="Validate comments endpoints"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="e57cb47a-275c-43a9-9ff7-34d144d5a0c9" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Check comments for not existing post" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Get user comments" id="0acdca7a-ddf2-4bf7-87f8-ea16fc24c85f"><con:settings/><con:config service="https://gorest.co.in" resourcePath="/public/v2/posts/{userId}/comments" methodName="Get user comments" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get user comments" id="bbaf0230-e005-475d-a61b-14ef2fd8aa0b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Autohrization" value="${#Project#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request/><con:originalUri>https://gorest.co.in/public/v2/posts/28/comments</con:originalUri><con:assertion type="Response SLA Assertion" id="a2af4eb5-f3d1-47b8-9744-f3e52c718bbb" name="Response SLA"><con:configuration><SLA>1500</SLA></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="c20b08f3-2151-45d2-84b3-cbf2df245f8f" name="Invalid HTTP Status Codes"><con:configuration><codes>502, 404</codes></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="c3f68750-ef40-4f69-8272-3ec233a88641" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="10000" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>userId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="f0d5fa96-5a9d-40fa-90be-2796d4c18189" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Check for empty post create" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Create user" id="3849ae36-c8ad-438a-889a-e70537d68615"><con:settings/><con:config service="https://gorest.co.in" resourcePath="/public/v2/users" methodName="Create user" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create user" id="6446a9e0-f49e-443a-a9ce-aff71d1a6412" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value=" ${#Project#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request>{
	"name":"${#TestSuite#name}",
	"gender":"${#TestSuite#gender}",
	"email":"${#TestSuite#email}",
	"status":"${#TestSuite#status}"
}
</con:request><con:originalUri>https://gorest.co.in/public/v2/users</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="adb9b1a5-4d85-4ea5-8845-bb198c67b857" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="980b8c65-508a-4cdb-8341-2d9ddcfbe7cc" name="Response SLA"><con:configuration><SLA>1500</SLA></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="5c8bd528-f096-482e-941f-2a289fabcbdd" name="Invalid HTTP Status Codes"><con:configuration><codes>422, 404, 502, 500</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Save userId in TestSuite" id="48d2fb4d-8367-460a-afef-8dca396619be"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def response = testRunner.testCase.testSteps["Create user"].testRequest.response.contentAsString
def slurper = new JsonSlurper()
def result = slurper.parseText(response)
def userId = result.id.toString()
testRunner.testCase.testSuite.setPropertyValue("userId", userId)


</script></con:config></con:testStep><con:testStep type="restrequest" name="Create empty comment" id="c10dfee6-13f1-4260-b297-a9364809c718"><con:settings/><con:config service="https://gorest.co.in" resourcePath="/public/v2/posts/{userId}/comments" methodName="Comments 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create empty comment" id="9e521662-4f55-4eec-bdee-bfc89dd7ad47" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request>{
	"post":"",
	"name":"",
	"email":"",
	"body":""
}
</con:request><con:originalUri>https://gorest.co.in/public/v2/posts/28/comments</con:originalUri><con:assertion type="Response SLA Assertion" id="4a5e9710-3dda-4946-bfb6-d7a8b098330b" name="Response SLA"><con:configuration><SLA>2000</SLA></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="0d2916f2-07f2-4a48-bba5-cc4bca99baba" name="Valid HTTP Status Codes"><con:configuration><codes>422</codes></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="284f749e-f6a1-4799-951b-e002b6e19dff" name="Invalid HTTP Status Codes"><con:configuration><codes>201, 502, 404</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4ac009da-560f-461f-954d-55c246b45328" name="Script Assertion"><con:configuration><scriptText>import groovy.json.JsonSlurper
//get json response
def responseMessage = messageExchange.response.responseContent
def json = new JsonSlurper().parseText(responseMessage)

assert json.message[0] == messageExchange.modelItem.testCase.testSuite.project.getPropertyValue("noPostErrorMessage")
assert json.message[1] == messageExchange.modelItem.testCase.testSuite.project.getPropertyValue("emptyFieldErrorMessage")
assert json.message[2] == messageExchange.modelItem.testCase.testSuite.project.getPropertyValue("emptyEmailErrorMessage")
assert json.message[3] == messageExchange.modelItem.testCase.testSuite.project.getPropertyValue("emptyFieldErrorMessage")
assert json.field[0] == "post"
assert json.field[1] == "name"
assert json.field[2] == "email"
assert json.field[3] == "body"

</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#userId}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>userId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:tearDownScript>def testStep =  testRunner.testCase.testSuite.project.testSuites["Validate user create/edit"].testCases["Check for deleting user"].getTestStepByName("Delete user")
testStep.run(testRunner, context)
testCase.testSuite.setPropertyValue( "userId", " " )</con:tearDownScript><con:properties/></con:testCase><con:testCase id="d014ac24-8b4c-4f13-98ee-1c972845f1ef" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create valid comment to Post" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Create user" id="474b1e8a-aab9-4153-a6ea-9603a0d94a8b"><con:settings/><con:config service="https://gorest.co.in" resourcePath="/public/v2/users" methodName="Create user" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create user" id="6446a9e0-f49e-443a-a9ce-aff71d1a6412" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value=" ${#Project#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request>{
	"name":"${#TestSuite#name}",
	"gender":"${#TestSuite#gender}",
	"email":"${#TestSuite#email}",
	"status":"${#TestSuite#status}"
}
</con:request><con:originalUri>https://gorest.co.in/public/v2/users</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="adb9b1a5-4d85-4ea5-8845-bb198c67b857" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="980b8c65-508a-4cdb-8341-2d9ddcfbe7cc" name="Response SLA"><con:configuration><SLA>1000</SLA></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="5c8bd528-f096-482e-941f-2a289fabcbdd" name="Invalid HTTP Status Codes"><con:configuration><codes>422, 404, 502, 500</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Save userId in TestSuite" id="a94a67f6-b02b-46e9-bc99-0533be9111fa"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def response = testRunner.testCase.testSteps["Create user"].testRequest.response.contentAsString
def slurper = new JsonSlurper()
def result = slurper.parseText(response)
def userId = result.id.toString()
testRunner.testCase.testSuite.setPropertyValue("userId", userId)

</script></con:config></con:testStep><con:testStep type="restrequest" name="Create post" id="edb6d190-52c7-4000-80a1-efdb004aa235"><con:settings/><con:config service="https://gorest.co.in" resourcePath="/public/v2/users/{userId}/posts" methodName="Posts 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create post" id="87804852-7791-49df-8e12-3b6fe78a04bc" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value=" ${#Project#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request>{
	"title":"${#TestSuite#postTitle}",
	"body":"${#TestSuite#postBody}"
}
</con:request><con:originalUri>https://gorest.co.in/public/v2/users/28/posts</con:originalUri><con:assertion type="Response SLA Assertion" id="12cc494b-61cc-4128-99cc-6fe6f1696ef4" name="Response SLA"><con:configuration><SLA>2500</SLA></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="8d413188-b505-4b5f-a389-be24a4164ec4" name="Invalid HTTP Status Codes"><con:configuration><codes>404, 502, 422, 500</codes></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="dfdb9a9b-fefc-4e61-b810-0d8a4cbdf54c" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="96783487-e2b9-4ce7-ab63-6301140c2453" name="Script Assertion"><con:configuration><scriptText>import groovy.json.JsonSlurper
//get json response
def responseMessage = messageExchange.response.responseContent
def json = new JsonSlurper().parseText(responseMessage)
log.info(json)
def titleProp = messageExchange.modelItem.testStep.testCase.testSuite.getPropertyValue("postTitle")
def bodyProp = messageExchange.modelItem.testStep.testCase.testSuite.getPropertyValue("postBody")


assert json.title == titleProp
assert json.body == bodyProp

</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#userId}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>userId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Save postId in TestSuite" id="1ad3ecb6-8a51-4f15-b7ee-9fa8c41ef0d5"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def response = testRunner.testCase.testSteps["Create post"].testRequest.response.contentAsString
def slurper = new JsonSlurper()
def result = slurper.parseText(response)
def postId = result.id.toString()
testRunner.testCase.testSuite.setPropertyValue("postId", postId)

</script></con:config></con:testStep><con:testStep type="restrequest" name="Create comment" id="881528f6-f5d0-487b-bb21-68f161a69f8e"><con:settings/><con:config service="https://gorest.co.in" resourcePath="/public/v2/posts/{userId}/comments" methodName="Comments 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create comment" id="9e521662-4f55-4eec-bdee-bfc89dd7ad47" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request>{
	"post":"${#TestSuite#postid}",
	"name":"${#TestSuite#name}",
	"email":"${#TestSuite#email}",
	"body":"comment"
}
</con:request><con:originalUri>https://gorest.co.in/public/v2/posts/28/comments</con:originalUri><con:assertion type="Response SLA Assertion" id="4a5e9710-3dda-4946-bfb6-d7a8b098330b" name="Response SLA"><con:configuration><SLA>2000</SLA></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="0d2916f2-07f2-4a48-bba5-cc4bca99baba" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="284f749e-f6a1-4799-951b-e002b6e19dff" name="Invalid HTTP Status Codes"><con:configuration><codes>422, 404, 502</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4ac009da-560f-461f-954d-55c246b45328" name="Script Assertion"><con:configuration><scriptText>import groovy.json.JsonSlurper
//get json response
def responseMessage = messageExchange.response.responseContent
def json = new JsonSlurper().parseText(responseMessage)
assert json.post_id.toString() == messageExchange.modelItem.testStep.testCase.testSuite.getPropertyValue("postId")
log.info("Whole response:")
log.info(json)</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#postId}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>userId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:tearDownScript>def testStep =  testRunner.testCase.testSuite.project.testSuites["Validate user create/edit"].testCases["Check for deleting user"].getTestStepByName("Delete user")
testStep.run(testRunner, context)
testCase.testSuite.setPropertyValue( "userId", " " )
testCase.testSuite.setPropertyValue( "postId", " " )</con:tearDownScript><con:properties/></con:testCase><con:testCase id="ed2c11a4-5d36-4f58-bded-510f6891f4be" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create and Validate user comments" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Create user" id="840629e4-92e9-4fa9-aa5a-f221b131b3d8"><con:settings/><con:config service="https://gorest.co.in" resourcePath="/public/v2/users" methodName="Create user" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create user" id="6446a9e0-f49e-443a-a9ce-aff71d1a6412" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value=" ${#Project#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request>{
	"name":"${#TestSuite#name}",
	"gender":"${#TestSuite#gender}",
	"email":"${#TestSuite#email}",
	"status":"${#TestSuite#status}"
}
</con:request><con:originalUri>https://gorest.co.in/public/v2/users</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="adb9b1a5-4d85-4ea5-8845-bb198c67b857" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="980b8c65-508a-4cdb-8341-2d9ddcfbe7cc" name="Response SLA"><con:configuration><SLA>1000</SLA></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="5c8bd528-f096-482e-941f-2a289fabcbdd" name="Invalid HTTP Status Codes"><con:configuration><codes>422, 404, 502, 500</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Save userId in TestSuite" id="31024a67-a6a2-4aa7-8d07-a6e170b2b056"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def response = testRunner.testCase.testSteps["Create user"].testRequest.response.contentAsString
def slurper = new JsonSlurper()
def result = slurper.parseText(response)
def userId = result.id.toString()
testRunner.testCase.testSuite.setPropertyValue("userId", userId)

</script></con:config></con:testStep><con:testStep type="restrequest" name="Create post" id="7819f31d-6145-497d-ae3c-e596af5d7f8e"><con:settings/><con:config service="https://gorest.co.in" resourcePath="/public/v2/users/{userId}/posts" methodName="Posts 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create post" id="87804852-7791-49df-8e12-3b6fe78a04bc" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value=" ${#Project#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request>{
	"title":"${#TestSuite#postTitle}",
	"body":"${#TestSuite#postBody}"
}
</con:request><con:originalUri>https://gorest.co.in/public/v2/users/28/posts</con:originalUri><con:assertion type="Response SLA Assertion" id="12cc494b-61cc-4128-99cc-6fe6f1696ef4" name="Response SLA"><con:configuration><SLA>2500</SLA></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="8d413188-b505-4b5f-a389-be24a4164ec4" name="Invalid HTTP Status Codes"><con:configuration><codes>404, 502, 422, 500</codes></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="dfdb9a9b-fefc-4e61-b810-0d8a4cbdf54c" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="96783487-e2b9-4ce7-ab63-6301140c2453" name="Script Assertion"><con:configuration><scriptText>import groovy.json.JsonSlurper
//get json response
def responseMessage = messageExchange.response.responseContent
def json = new JsonSlurper().parseText(responseMessage)
log.info(json)
def titleProp = messageExchange.modelItem.testStep.testCase.testSuite.getPropertyValue("postTitle")
def bodyProp = messageExchange.modelItem.testStep.testCase.testSuite.getPropertyValue("postBody")


assert json.title == titleProp
assert json.body == bodyProp

</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#userId}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>userId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Save postId in TestSuite" id="6f9848e7-34bc-4026-95f4-ec09f146d410"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def response = testRunner.testCase.testSteps["Create post"].testRequest.response.contentAsString
def slurper = new JsonSlurper()
def result = slurper.parseText(response)
def postId = result.id.toString()
testRunner.testCase.testSuite.setPropertyValue("postId", postId)

</script></con:config></con:testStep><con:testStep type="restrequest" name="Create 1st comment" id="fed9f100-4d20-4aca-9263-7a6e0c0af376"><con:settings/><con:config service="https://gorest.co.in" resourcePath="/public/v2/posts/{userId}/comments" methodName="Comments 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create 1st comment" id="9e521662-4f55-4eec-bdee-bfc89dd7ad47" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request>{
	"post":"${#TestSuite#postid}",
	"name":"${#TestSuite#name}",
	"email":"${#TestSuite#email}",
	"body":"commen1t"
}
</con:request><con:originalUri>https://gorest.co.in/public/v2/posts/28/comments</con:originalUri><con:assertion type="Response SLA Assertion" id="4a5e9710-3dda-4946-bfb6-d7a8b098330b" name="Response SLA"><con:configuration><SLA>2000</SLA></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="0d2916f2-07f2-4a48-bba5-cc4bca99baba" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="284f749e-f6a1-4799-951b-e002b6e19dff" name="Invalid HTTP Status Codes"><con:configuration><codes>422, 404, 502</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4ac009da-560f-461f-954d-55c246b45328" name="Script Assertion" disabled="true"><con:configuration><scriptText>import groovy.json.JsonSlurper
//get json response
def responseMessage = messageExchange.response.responseContent
def json = new JsonSlurper().parseText(responseMessage)

assert json.post_id.toString() == messageExchange.modelItem.testStep.testCase.testSuite.getPropertyValue("postId")</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#postId}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>userId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Create 2nd comment" id="233bcaec-bae5-4050-9a17-a16b13807ed5"><con:settings/><con:config service="https://gorest.co.in" resourcePath="/public/v2/posts/{userId}/comments" methodName="Comments 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create 2nd comment" id="9e521662-4f55-4eec-bdee-bfc89dd7ad47" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request>{
	"post":"${#TestSuite#postid}",
	"name":"${#TestSuite#name}",
	"email":"${#TestSuite#email}",
	"body":"comment2"
}
</con:request><con:originalUri>https://gorest.co.in/public/v2/posts/28/comments</con:originalUri><con:assertion type="Response SLA Assertion" id="4a5e9710-3dda-4946-bfb6-d7a8b098330b" name="Response SLA"><con:configuration><SLA>2000</SLA></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="0d2916f2-07f2-4a48-bba5-cc4bca99baba" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="284f749e-f6a1-4799-951b-e002b6e19dff" name="Invalid HTTP Status Codes"><con:configuration><codes>422, 404, 502</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4ac009da-560f-461f-954d-55c246b45328" name="Script Assertion" disabled="true"><con:configuration><scriptText>import groovy.json.JsonSlurper
//get json response
def responseMessage = messageExchange.response.responseContent
def json = new JsonSlurper().parseText(responseMessage)

assert json.post_id.toString() == messageExchange.modelItem.testStep.testCase.testSuite.getPropertyValue("postId")</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#postId}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>userId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get user comments" id="efc2c730-ffcd-412e-8ff1-c3a877ea423d"><con:settings/><con:config service="https://gorest.co.in" resourcePath="/public/v2/posts/{userId}/comments" methodName="Get user comments" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get user comments" id="bbaf0230-e005-475d-a61b-14ef2fd8aa0b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request/><con:originalUri>https://gorest.co.in/public/v2/posts/28/comments</con:originalUri><con:assertion type="Response SLA Assertion" id="a2af4eb5-f3d1-47b8-9744-f3e52c718bbb" name="Response SLA"><con:configuration><SLA>1500</SLA></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="c20b08f3-2151-45d2-84b3-cbf2df245f8f" name="Invalid HTTP Status Codes"><con:configuration><codes>502, 404</codes></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="c3f68750-ef40-4f69-8272-3ec233a88641" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="dd7022aa-af20-4f8b-947b-174d75c31f53" name="JsonPath Count"><con:configuration><path>.id</path><content>2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#postId}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>userId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:tearDownScript>def testStep =  testRunner.testCase.testSuite.project.testSuites["Validate user create/edit"].testCases["Check for deleting user"].getTestStepByName("Delete user")
testStep.run(testRunner, context)
testCase.testSuite.setPropertyValue( "userId", " " )
testCase.testSuite.setPropertyValue( "postId", " " )</con:tearDownScript><con:properties/></con:testCase><con:properties><con:property><con:name>name</con:name><con:value>Jackie</con:value></con:property><con:property><con:name>gender</con:name><con:value>female</con:value></con:property><con:property><con:name>email</con:name><con:value>jakckie@tester.com</con:value></con:property><con:property><con:name>status</con:name><con:value>active</con:value></con:property><con:property><con:name>userId</con:name><con:value> </con:value></con:property><con:property><con:name>postTitle</con:name><con:value>Test title</con:value></con:property><con:property><con:name>postBody</con:name><con:value>TRATLALTALTALLATLA</con:value></con:property><con:property><con:name>postId</con:name><con:value> </con:value></con:property></con:properties><con:setupScript>log.info("Starting create/edit  posts comments tests")</con:setupScript><con:tearDownScript>log.info("Create/edit  posts comments tests finished")</con:tearDownScript></con:testSuite><con:testSuite id="f45c36dc-f0a1-4e0e-bf72-b1f5c5e63426" name="Validate todo responses"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="bba73fcd-4e08-4091-bb12-7951556eceaf" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create todo list" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Create user" id="5a0a730b-ee32-449e-ade5-d37e1bde7931"><con:settings/><con:config service="https://gorest.co.in" resourcePath="/public/v2/users" methodName="Create user" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create user" id="6446a9e0-f49e-443a-a9ce-aff71d1a6412" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value=" ${#Project#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request>{
	"name":"${#TestSuite#name}",
	"gender":"${#TestSuite#gender}",
	"email":"${#TestSuite#email}",
	"status":"${#TestSuite#status}"
}
</con:request><con:originalUri>https://gorest.co.in/public/v2/users</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="adb9b1a5-4d85-4ea5-8845-bb198c67b857" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="Response SLA Assertion" id="980b8c65-508a-4cdb-8341-2d9ddcfbe7cc" name="Response SLA"><con:configuration><SLA>1000</SLA></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="5c8bd528-f096-482e-941f-2a289fabcbdd" name="Invalid HTTP Status Codes"><con:configuration><codes>422, 404, 502, 500</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Save userId in TestSuite" id="b28fd307-b0e8-473b-8fa5-0ff83c300c20"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def response = testRunner.testCase.testSteps["Create user"].testRequest.response.contentAsString
def slurper = new JsonSlurper()
def result = slurper.parseText(response)
def userId = result.id.toString()
testRunner.testCase.testSuite.setPropertyValue("userId", userId)

</script></con:config></con:testStep><con:testStep type="restrequest" name="Create todo" id="61b17557-8dd8-4500-9cf0-0dc595b87ec7"><con:settings/><con:config service="https://gorest.co.in" resourcePath="/public/v2/users/{userId}/todos" methodName="Post todo" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create todo" id="f27d07a5-75f4-42ab-8b20-3e95a73b7ec7" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request>{
	"title":"Project",
	"status":"pending",
	"due_on":"${#TestSuite#due_date}"
}
</con:request><con:originalUri>https://gorest.co.in/public/v2/users/28/todos</con:originalUri><con:assertion type="Response SLA Assertion" id="39cfa3c8-e75f-4fdd-a96e-dd4f145083a3" name="Response SLA"><con:configuration><SLA>2000</SLA></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="99395fd3-7043-48d0-b8d7-781c18c33663" name="Invalid HTTP Status Codes"><con:configuration><codes>422 502, 404
</codes></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="00e0242d-efeb-40c0-ae18-d7eb9ceacbd9" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#userId}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>userId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Save toDo Id in TestSuite" id="aef1149f-6d94-485f-a4af-64a653d4101b"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def response = testRunner.testCase.testSteps["Create todo"].testRequest.response.contentAsString
def slurper = new JsonSlurper()
def result = slurper.parseText(response)
///def userI = result.id.toString()
testRunner.testCase.testSuite.setPropertyValue("toDoId", result.id.toString())

</script></con:config></con:testStep><con:testStep type="restrequest" name="Todos validation" id="b2ab1402-72e6-4653-b1de-c4a954fedd3d"><con:settings/><con:config service="https://gorest.co.in" resourcePath="/public/v2/todos" methodName="Todos 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Todos validation" id="f44e3ce5-f0d1-4e45-bc5c-a235c573601d" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://gorest.co.in</con:endpoint><con:request/><con:originalUri>https://gorest.co.in/public/v2/todos</con:originalUri><con:assertion type="JsonPath Count" id="d1437b27-9c38-418b-85aa-d564d6f5497a" name="JsonPath Count"><con:configuration><path>.id</path><content>10</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="da374b9a-51af-4244-8f63-b6bf1db14e30" name="Existence of status"><con:configuration><path>$.[0].status</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="ca8fe2b5-5abe-4319-8054-652c2782c8b9" name="Invalid HTTP Status Codes"><con:configuration><codes>502,404,500</codes></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="df23816f-c848-4f23-a541-5aa78e385e17" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="a2137746-47ee-4205-965b-4a9ec8c6741f" name="Script Assertion-Check if added date is in response"><con:configuration><scriptText>import groovy.json.JsonSlurper
//get json response
def responseMessage = messageExchange.response.responseContent
def json = new JsonSlurper().parseText(responseMessage)
// Check of attachment in response 
assert json.id[0].toString() == messageExchange.modelItem.testStep.testCase.testSuite.getPropertyValue( "toDoId")
assert json.status[0] == "pending"
def contains = json.due_on[0].contains(messageExchange.modelItem.testStep.testCase.testSuite.getPropertyValue( "due_date").toString())
assert contains == true

</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:tearDownScript>def testStep =  testRunner.testCase.testSuite.project.testSuites["Validate user create/edit"].testCases["Check for deleting user"].getTestStepByName("Delete user")
testStep.run(testRunner, context)
testCase.testSuite.setPropertyValue( "userId", " " )
testCase.testSuite.setPropertyValue( "toDoId", " " )</con:tearDownScript><con:properties/></con:testCase><con:properties><con:property><con:name>name</con:name><con:value>Jackie</con:value></con:property><con:property><con:name>gender</con:name><con:value>female</con:value></con:property><con:property><con:name>email</con:name><con:value>jakckie@tester.com</con:value></con:property><con:property><con:name>status</con:name><con:value>active</con:value></con:property><con:property><con:name>userId</con:name><con:value> </con:value></con:property><con:property><con:name>toDoId</con:name><con:value> </con:value></con:property><con:property><con:name>due_date</con:name><con:value>2023-01-03</con:value></con:property></con:properties><con:setupScript>log.info("Starting create/edit  todos tests")</con:setupScript><con:tearDownScript>log.info("Create/edit todo tests finished")</con:tearDownScript></con:testSuite><con:testSuite id="08354826-63a1-4fe2-bcdf-d097b9af9a5f" name="Check if all data are deleted"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="4c9f34ee-23bc-4483-ab8d-0f62817c0a98" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Checking if data are deleted" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Check if all is cleared" id="f6932b78-b30e-4ecf-8df1-68c5d08aadc5"><con:settings/><con:config><script>def project = testRunner.getTestCase().getTestSuite().getProject().getWorkspace().getProjectByName("REST Project with API tests")
def userIdProp = project.getTestSuiteByName("Validate user create/edit").getPropertyValue("userId")
def postIdProp = project.getTestSuiteByName("Validate posts endpoints").getPropertyValue("postId")
def postIdProp2 = project.getTestSuiteByName("Validate posts endpoints").getPropertyValue("postId2")
def toDoProp = project.getTestSuiteByName("Validate todo responses").getPropertyValue("toDoId")
assert userIdProp == " "
assert postIdProp == " "
assert postIdProp2 == " "
assert toDoProp == " "




</script></con:config></con:testStep><con:setupScript/><con:properties/></con:testCase><con:properties/><con:setupScript/><con:tearDownScript/></con:testSuite><con:properties><con:property><con:name>token</con:name><con:value>Bearer 017cdbf941523b2d82a487f36a22846fb6ab9c693643eafcc6294b4d66050d05</con:value></con:property><con:property><con:name>sameEmailMessage</con:name><con:value>has already been taken</con:value></con:property><con:property><con:name>invalidEmailMessage</con:name><con:value>is invalid</con:value></con:property><con:property><con:name>emptyFieldErrorMessage</con:name><con:value>can't be blank</con:value></con:property><con:property><con:name>noPostErrorMessage</con:name><con:value>must exist</con:value></con:property><con:property><con:name>emptyEmailErrorMessage</con:name><con:value>can't be blank, is invalid</con:value></con:property><con:property><con:name>emptyFieldErrorMessage1</con:name><con:value>can't be blank, can be male of female</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer><con:oAuth2Profile><con:name>Profile 1</con:name><con:accessToken>Bearer 017cdbf941523b2d82a487f36a22846fb6ab9c693643eafcc6294b4d66050d05</con:accessToken><con:accessTokenPosition>HEADER</con:accessTokenPosition><con:oAuth2Flow>AUTHORIZATION_CODE_GRANT</con:oAuth2Flow><con:refreshAccessTokenMethod>AUTOMATIC</con:refreshAccessTokenMethod><con:accessTokenStatus>UNKNOWN</con:accessTokenStatus><con:accessTokenStartingStatus>ENTERED_MANUALLY</con:accessTokenStartingStatus><con:manualAccessTokenExpirationTime/><con:manualAccessTokenExpirationTimeUnit>SECONDS</con:manualAccessTokenExpirationTimeUnit></con:oAuth2Profile></con:oAuth2ProfileContainer><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>